{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const loginUser = createAsyncThunk('auth/loginUser', async (credentials, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials),\n      credentials: 'include'\n    });\n    if (!response.ok) throw new Error('Login failed');\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const checkSession = createAsyncThunk('auth/checkSession', async (_, thunkAPI) => {\n  try {\n    const response = await fetch('/api/check_session', {\n      credentials: 'include'\n    });\n    const data = await response.json();\n    if (response.ok && data.isAuthenticated) {\n      return {\n        isAuthenticated: true,\n        user: data.user\n      };\n    } else {\n      return thunkAPI.rejectWithValue(data);\n    }\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\nexport const logoutUser = createAsyncThunk('auth/logoutUser', async (_, thunkAPI) => {\n  try {\n    await fetch('/api/logout', {\n      method: 'POST',\n      credentials: 'include'\n    });\n    return {\n      isAuthenticated: false\n    };\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(loginUser.fulfilled, (state, action) => {\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.isLoading = false;\n      state.error = null;\n    }).addCase(loginUser.pending, state => {\n      state.isLoading = true;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n    }).addCase(checkSession.fulfilled, (state, action) => {\n      state.isAuthenticated = action.payload.isAuthenticated;\n      state.user = action.payload.user;\n    }).addCase(checkSession.rejected, (state, action) => {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.error = action.payload;\n    }).addCase(logoutUser.fulfilled, state => {\n      state.isAuthenticated = false;\n      state.user = null;\n    });\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","loginUser","credentials","rejectWithValue","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error","message","checkSession","_","thunkAPI","isAuthenticated","user","logoutUser","initialState","isLoading","authSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","pending","rejected","reducer"],"sources":["/home/samuelrcwade/Development/Code/onelab_inventory_management/client/src/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const loginUser = createAsyncThunk(\n  'auth/loginUser',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const response = await fetch('/api/login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(credentials),\n        credentials: 'include', \n      });\n      if (!response.ok) throw new Error('Login failed');\n      const data = await response.json();\n      return data; \n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const checkSession = createAsyncThunk('auth/checkSession', async (_, thunkAPI) => {\n    try {\n      const response = await fetch('/api/check_session', { credentials: 'include' });\n      const data = await response.json();\n      if (response.ok && data.isAuthenticated) {\n        return { isAuthenticated: true, user: data.user };\n      } else {\n        return thunkAPI.rejectWithValue(data);\n      }\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  });\n  \nexport const logoutUser = createAsyncThunk('auth/logoutUser', async (_, thunkAPI) => {\n    try {\n      await fetch('/api/logout', { method: 'POST', credentials: 'include' });\n      return { isAuthenticated: false };\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n});\n\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(loginUser.fulfilled, (state, action) => {\n        state.isAuthenticated = true;\n        state.user = action.payload.user;\n        state.isLoading = false;\n        state.error = null;\n      })\n      .addCase(loginUser.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.error = action.payload;\n        state.isLoading = false;\n      })\n      .addCase(checkSession.fulfilled, (state, action) => {\n        state.isAuthenticated = action.payload.isAuthenticated;\n        state.user = action.payload.user;\n      })\n      .addCase(checkSession.rejected, (state, action) => {\n        state.isAuthenticated = false;\n        state.user = null;\n        state.error = action.payload;\n      })\n      .addCase(logoutUser.fulfilled, (state) => {\n        state.isAuthenticated = false;\n        state.user = null;\n      });\n  },\n});\n\nexport default authSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
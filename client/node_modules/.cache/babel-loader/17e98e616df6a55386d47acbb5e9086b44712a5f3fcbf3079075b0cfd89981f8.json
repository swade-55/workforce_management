{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Projects/inv_management/client/src/components/ToolRoster.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport ToolCard from \"./ToolCard\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteTool } from '../slices/toolSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToolRoster() {\n  _s();\n  const dispatch = useDispatch();\n  const tools = useSelector(state => state.tools.tools);\n  const handleDelete = toolId => {\n    dispatch(deleteTool(toolId));\n  };\n  const toolsByJobClass = tools.reduce((acc, tool) => {\n    const jobClassKey = tool.jobclass.id;\n    if (!acc[jobClassKey]) {\n      acc[jobClassKey] = {\n        tools: [],\n        jobClassName: tool.jobclass.name\n      };\n    }\n    acc[jobClassKey].tools.push(tool);\n    return acc;\n  }, {});\n  console.log(toolsByJobClass);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.entries(toolsByJobClass).map(([jobClassKey, {\n      tools,\n      jobClassName\n    }]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold mb-5\",\n        children: jobClassName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-4 gap-4\",\n        children: tools.map(tool => /*#__PURE__*/_jsxDEV(ToolCard, {\n          tool: tool,\n          handleDelete: () => handleDelete(tool.id)\n        }, tool.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, jobClassKey, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(ToolRoster, \"CuOqnuMUtLseI+xINFeMAY3M9aM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ToolRoster;\nexport default ToolRoster;\nvar _c;\n$RefreshReg$(_c, \"ToolRoster\");","map":{"version":3,"names":["React","ToolCard","useDispatch","useSelector","deleteTool","jsxDEV","_jsxDEV","ToolRoster","_s","dispatch","tools","state","handleDelete","toolId","toolsByJobClass","reduce","acc","tool","jobClassKey","jobclass","id","jobClassName","name","push","console","log","children","Object","entries","map","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Projects/inv_management/client/src/components/ToolRoster.js"],"sourcesContent":["import React from \"react\";\nimport ToolCard from \"./ToolCard\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteTool } from '../slices/toolSlice';\n\nfunction ToolRoster() {\n  const dispatch = useDispatch();\n  const tools = useSelector((state) => state.tools.tools);\n  const handleDelete = (toolId) => {\n    dispatch(deleteTool(toolId));\n  };\n\n  const toolsByJobClass = tools.reduce((acc, tool) => {\n    const jobClassKey = tool.jobclass.id; \n    if (!acc[jobClassKey]) {\n      acc[jobClassKey] = {\n        tools: [],\n        jobClassName: tool.jobclass.name \n      };\n    }\n    acc[jobClassKey].tools.push(tool);\n    return acc;\n  }, {});\n\n  console.log(toolsByJobClass)\n\n  return (\n    <div>\n      {Object.entries(toolsByJobClass).map(([jobClassKey, { tools, jobClassName }]) => (\n        <div key={jobClassKey}>\n          <h2 className=\"text-3xl font-bold mb-5\">{jobClassName}</h2>\n          <div className=\"grid grid-cols-4 gap-4\">\n            {tools.map(tool => (\n              <ToolCard key={tool.id} tool={tool} handleDelete={() => handleDelete(tool.id)} />\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ToolRoster;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,KAAK,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACD,KAAK,CAACA,KAAK,CAAC;EACvD,MAAME,YAAY,GAAIC,MAAM,IAAK;IAC/BJ,QAAQ,CAACL,UAAU,CAACS,MAAM,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMC,eAAe,GAAGJ,KAAK,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;IAClD,MAAMC,WAAW,GAAGD,IAAI,CAACE,QAAQ,CAACC,EAAE;IACpC,IAAI,CAACJ,GAAG,CAACE,WAAW,CAAC,EAAE;MACrBF,GAAG,CAACE,WAAW,CAAC,GAAG;QACjBR,KAAK,EAAE,EAAE;QACTW,YAAY,EAAEJ,IAAI,CAACE,QAAQ,CAACG;MAC9B,CAAC;IACH;IACAN,GAAG,CAACE,WAAW,CAAC,CAACR,KAAK,CAACa,IAAI,CAACN,IAAI,CAAC;IACjC,OAAOD,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EAENQ,OAAO,CAACC,GAAG,CAACX,eAAe,CAAC;EAE5B,oBACER,OAAA;IAAAoB,QAAA,EACGC,MAAM,CAACC,OAAO,CAACd,eAAe,CAAC,CAACe,GAAG,CAAC,CAAC,CAACX,WAAW,EAAE;MAAER,KAAK;MAAEW;IAAa,CAAC,CAAC,kBAC1Ef,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAIwB,SAAS,EAAC,yBAAyB;QAAAJ,QAAA,EAAEL;MAAY;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3D5B,OAAA;QAAKwB,SAAS,EAAC,wBAAwB;QAAAJ,QAAA,EACpChB,KAAK,CAACmB,GAAG,CAACZ,IAAI,iBACbX,OAAA,CAACL,QAAQ;UAAegB,IAAI,EAAEA,IAAK;UAACL,YAAY,EAAEA,CAAA,KAAMA,YAAY,CAACK,IAAI,CAACG,EAAE;QAAE,GAA/DH,IAAI,CAACG,EAAE;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA0D,CACjF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA,GANEhB,WAAW;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOhB,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC1B,EAAA,CAnCQD,UAAU;EAAA,QACAL,WAAW,EACdC,WAAW;AAAA;AAAAgC,EAAA,GAFlB5B,UAAU;AAqCnB,eAAeA,UAAU;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
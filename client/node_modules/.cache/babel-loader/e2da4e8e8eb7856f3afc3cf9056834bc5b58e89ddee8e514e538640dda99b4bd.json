{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Projects/inv_management/client/src/components/ExecutiveSummary.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExecutiveSummary() {\n  _s();\n  const tools = useSelector(state => state.tools.tools);\n\n  // Group tools by department and then by job class, including categoryId\n  const toolsByCategory = tools.reduce((acc, tool) => {\n    const categoryKey = `${tool.category.name}-${tool.category.id}`; // Unique key for job class including ID\n\n    if (!acc[categoryKey]) {\n      acc[categoryKey] = {\n        tools: [],\n        categoryId: tool.category.id,\n        // Store categoryId for later reference\n        categoryName: tool.category.name // Store categoryName for display\n      };\n    }\n    acc[categoryKey].tools.push(tool);\n    return acc;\n  }, {});\n\n  // Calculate average uptime, attendance, and specific metric based on job class ID\n  const calculateAverages = (tools, categoryId) => {\n    if (tools.length === 0) return {\n      averageUptime: 0,\n      averageAttendance: 0,\n      specificMetric: 0\n    };\n    const totals = tools.reduce((totals, tool) => {\n      totals.uptime += tool.metrics.Uptime || 0;\n      totals.attendance += tool.metrics.Attendance || 0;\n      // Use categoryId to determine which metric to use\n      totals.specificMetric += categoryId === 2 || categoryId === 4 ? tool.metrics.CasesPerHour || 0 : tool.metrics.PalletsPerHour || 0;\n      return totals;\n    }, {\n      uptime: 0,\n      attendance: 0,\n      specificMetric: 0\n    });\n    return {\n      averageUptime: totals.uptime / tools.length,\n      averageAttendance: totals.attendance / tools.length,\n      specificMetric: totals.specificMetric / tools.length\n    };\n  };\n\n  //   const getAveragesByDepartmentAndcategory = () => {\n  //     return Object.entries(toolsByDepartmentAndcategory).map(([department, categoryes]) => ({\n  //       department,\n  //       categoryes: Object.entries(categoryes).map(([categoryKey, { tools, categoryId, categoryName }]) => {\n  //         const { averageUptime, averageAttendance, specificMetric } = calculateAverages(tools, categoryId);\n  //         return {\n  //           categoryName,\n  //           categoryId,\n  //           averageUptime,\n  //           averageAttendance,\n  //           specificMetric\n  //         };\n  //       })\n  //     }));\n  //   };\n\n  //   const averagesData = getAveragesByDepartmentAndcategory();\n\n  // Function to round numbers to two decimal places\n  const formatNumber = num => Math.round(num * 100) / 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-5\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-5\",\n      children: \"Capacity Planner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(ExecutiveSummary, \"bcHsSqh8YVmo77wOpyQ2XHXdDCw=\", false, function () {\n  return [useSelector];\n});\n_c = ExecutiveSummary;\nexport default ExecutiveSummary;\nvar _c;\n$RefreshReg$(_c, \"ExecutiveSummary\");","map":{"version":3,"names":["React","useSelector","jsxDEV","_jsxDEV","ExecutiveSummary","_s","tools","state","toolsByCategory","reduce","acc","tool","categoryKey","category","name","id","categoryId","categoryName","push","calculateAverages","length","averageUptime","averageAttendance","specificMetric","totals","uptime","metrics","Uptime","attendance","Attendance","CasesPerHour","PalletsPerHour","formatNumber","num","Math","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Projects/inv_management/client/src/components/ExecutiveSummary.js"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\n\nfunction ExecutiveSummary() {\n  const tools = useSelector(state => state.tools.tools);\n\n  // Group tools by department and then by job class, including categoryId\n  const toolsByCategory = tools.reduce((acc, tool) => {\n    const categoryKey = `${tool.category.name}-${tool.category.id}`; // Unique key for job class including ID\n\n    if (!acc[categoryKey]) {\n      acc[categoryKey] = {\n        tools: [],\n        categoryId: tool.category.id, // Store categoryId for later reference\n        categoryName: tool.category.name // Store categoryName for display\n      };\n    }\n\n    acc[categoryKey].tools.push(tool);\n    return acc;\n  }, {});\n\n  // Calculate average uptime, attendance, and specific metric based on job class ID\n  const calculateAverages = (tools, categoryId) => {\n    if (tools.length === 0) return { averageUptime: 0, averageAttendance: 0, specificMetric: 0 };\n\n    const totals = tools.reduce((totals, tool) => {\n      totals.uptime += tool.metrics.Uptime || 0;\n      totals.attendance += tool.metrics.Attendance || 0;\n      // Use categoryId to determine which metric to use\n      totals.specificMetric += (categoryId === 2 || categoryId === 4)? tool.metrics.CasesPerHour || 0 : tool.metrics.PalletsPerHour || 0;\n      return totals;\n    }, { uptime: 0, attendance: 0, specificMetric: 0 });\n\n    return {\n      averageUptime: totals.uptime / tools.length,\n      averageAttendance: totals.attendance / tools.length,\n      specificMetric: totals.specificMetric / tools.length\n    };\n  };\n\n//   const getAveragesByDepartmentAndcategory = () => {\n//     return Object.entries(toolsByDepartmentAndcategory).map(([department, categoryes]) => ({\n//       department,\n//       categoryes: Object.entries(categoryes).map(([categoryKey, { tools, categoryId, categoryName }]) => {\n//         const { averageUptime, averageAttendance, specificMetric } = calculateAverages(tools, categoryId);\n//         return {\n//           categoryName,\n//           categoryId,\n//           averageUptime,\n//           averageAttendance,\n//           specificMetric\n//         };\n//       })\n//     }));\n//   };\n\n//   const averagesData = getAveragesByDepartmentAndcategory();\n\n  // Function to round numbers to two decimal places\n  const formatNumber = (num) => Math.round(num * 100) / 100;\n\n  return (\n    <div className=\"p-5\">\n      <h1 className=\"text-3xl font-bold mb-5\">Capacity Planner</h1>\n\n      \n    </div>\n  );\n}\n\nexport default ExecutiveSummary;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAMC,KAAK,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,KAAK,CAACA,KAAK,CAAC;;EAErD;EACA,MAAME,eAAe,GAAGF,KAAK,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;IAClD,MAAMC,WAAW,GAAG,GAAGD,IAAI,CAACE,QAAQ,CAACC,IAAI,IAAIH,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE,CAAC,CAAC;;IAEjE,IAAI,CAACL,GAAG,CAACE,WAAW,CAAC,EAAE;MACrBF,GAAG,CAACE,WAAW,CAAC,GAAG;QACjBN,KAAK,EAAE,EAAE;QACTU,UAAU,EAAEL,IAAI,CAACE,QAAQ,CAACE,EAAE;QAAE;QAC9BE,YAAY,EAAEN,IAAI,CAACE,QAAQ,CAACC,IAAI,CAAC;MACnC,CAAC;IACH;IAEAJ,GAAG,CAACE,WAAW,CAAC,CAACN,KAAK,CAACY,IAAI,CAACP,IAAI,CAAC;IACjC,OAAOD,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEN;EACA,MAAMS,iBAAiB,GAAGA,CAACb,KAAK,EAAEU,UAAU,KAAK;IAC/C,IAAIV,KAAK,CAACc,MAAM,KAAK,CAAC,EAAE,OAAO;MAAEC,aAAa,EAAE,CAAC;MAAEC,iBAAiB,EAAE,CAAC;MAAEC,cAAc,EAAE;IAAE,CAAC;IAE5F,MAAMC,MAAM,GAAGlB,KAAK,CAACG,MAAM,CAAC,CAACe,MAAM,EAAEb,IAAI,KAAK;MAC5Ca,MAAM,CAACC,MAAM,IAAId,IAAI,CAACe,OAAO,CAACC,MAAM,IAAI,CAAC;MACzCH,MAAM,CAACI,UAAU,IAAIjB,IAAI,CAACe,OAAO,CAACG,UAAU,IAAI,CAAC;MACjD;MACAL,MAAM,CAACD,cAAc,IAAKP,UAAU,KAAK,CAAC,IAAIA,UAAU,KAAK,CAAC,GAAGL,IAAI,CAACe,OAAO,CAACI,YAAY,IAAI,CAAC,GAAGnB,IAAI,CAACe,OAAO,CAACK,cAAc,IAAI,CAAC;MAClI,OAAOP,MAAM;IACf,CAAC,EAAE;MAAEC,MAAM,EAAE,CAAC;MAAEG,UAAU,EAAE,CAAC;MAAEL,cAAc,EAAE;IAAE,CAAC,CAAC;IAEnD,OAAO;MACLF,aAAa,EAAEG,MAAM,CAACC,MAAM,GAAGnB,KAAK,CAACc,MAAM;MAC3CE,iBAAiB,EAAEE,MAAM,CAACI,UAAU,GAAGtB,KAAK,CAACc,MAAM;MACnDG,cAAc,EAAEC,MAAM,CAACD,cAAc,GAAGjB,KAAK,CAACc;IAChD,CAAC;EACH,CAAC;;EAEH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEE;EACA,MAAMY,YAAY,GAAIC,GAAG,IAAKC,IAAI,CAACC,KAAK,CAACF,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG;EAEzD,oBACE9B,OAAA;IAAKiC,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBlC,OAAA;MAAIiC,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAG1D,CAAC;AAEV;AAACpC,EAAA,CAlEQD,gBAAgB;EAAA,QACTH,WAAW;AAAA;AAAAyC,EAAA,GADlBtC,gBAAgB;AAoEzB,eAAeA,gBAAgB;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
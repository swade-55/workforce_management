{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Projects/inv_management/client/src/components/Breadcrumbs.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Breadcrumbs = () => {\n  _s();\n  const location = useLocation();\n  const pathnames = location.pathname.split('/').filter(x => x);\n  const displayNameMapping = {\n    'layout': ' ',\n    'toolform': 'Tool Form',\n    'categoryform': 'Category Form',\n    'executivesummary': 'Summary',\n    'masteroperatingplan': 'Layout',\n    'about': 'About',\n    'login': 'Login',\n    'signup': 'Sign Up'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-4xl mb-4\",\n    children: [pathnames.length > 0 && /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"text-4xl hover:text-blue-600\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), pathnames.map((value, index) => {\n      const isLast = index === pathnames.length - 1;\n      const to = `/${pathnames.slice(0, index + 1).join('/')}`;\n      const displayName = displayNameMapping[value] || value;\n      return isLast ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-4xl\",\n        children: [' > ', /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-4xl\",\n          children: displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, to, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-4xl\",\n        children: [' > ', /*#__PURE__*/_jsxDEV(Link, {\n          to: to,\n          className: \"text-4xl text-blue-600\",\n          children: displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, to, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Breadcrumbs, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = Breadcrumbs;\nexport default Breadcrumbs;\nvar _c;\n$RefreshReg$(_c, \"Breadcrumbs\");","map":{"version":3,"names":["React","Link","useLocation","jsxDEV","_jsxDEV","Breadcrumbs","_s","location","pathnames","pathname","split","filter","x","displayNameMapping","className","children","length","to","fileName","_jsxFileName","lineNumber","columnNumber","map","value","index","isLast","slice","join","displayName","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Projects/inv_management/client/src/components/Breadcrumbs.js"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Breadcrumbs = () => {\n  const location = useLocation();\n  const pathnames = location.pathname.split('/').filter((x) => x);\n\n  const displayNameMapping = {\n    'layout': ' ',\n    'toolform': 'Tool Form',\n    'categoryform': 'Category Form',\n    'executivesummary': 'Summary',\n    'masteroperatingplan': 'Layout',\n    'about': 'About',\n    'login': 'Login',\n    'signup': 'Sign Up',\n  };\n\n  return (\n    <div className=\"text-4xl mb-4\">\n      {pathnames.length > 0 && (\n        <Link to=\"/\" className=\"text-4xl hover:text-blue-600\">Home</Link>\n      )}\n      {pathnames.map((value, index) => {\n        const isLast = index === pathnames.length - 1;\n        const to = `/${pathnames.slice(0, index + 1).join('/')}`;\n        const displayName = displayNameMapping[value] || value;\n\n        return isLast ? (\n          <span key={to} className=\"text-4xl\">\n            {' > '}\n            <span className=\"text-4xl\">{displayName}</span>\n          </span>\n        ) : (\n          <span key={to} className=\"text-4xl\">\n            {' > '}\n            <Link to={to} className=\"text-4xl text-blue-600\">{displayName}</Link>\n          </span>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Breadcrumbs;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,SAAS,GAAGD,QAAQ,CAACE,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAAC;EAE/D,MAAMC,kBAAkB,GAAG;IACzB,QAAQ,EAAE,GAAG;IACb,UAAU,EAAE,WAAW;IACvB,cAAc,EAAE,eAAe;IAC/B,kBAAkB,EAAE,SAAS;IAC7B,qBAAqB,EAAE,QAAQ;IAC/B,OAAO,EAAE,OAAO;IAChB,OAAO,EAAE,OAAO;IAChB,QAAQ,EAAE;EACZ,CAAC;EAED,oBACET,OAAA;IAAKU,SAAS,EAAC,eAAe;IAAAC,QAAA,GAC3BP,SAAS,CAACQ,MAAM,GAAG,CAAC,iBACnBZ,OAAA,CAACH,IAAI;MAACgB,EAAE,EAAC,GAAG;MAACH,SAAS,EAAC,8BAA8B;MAAAC,QAAA,EAAC;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CACjE,EACAb,SAAS,CAACc,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;MAC/B,MAAMC,MAAM,GAAGD,KAAK,KAAKhB,SAAS,CAACQ,MAAM,GAAG,CAAC;MAC7C,MAAMC,EAAE,GAAG,IAAIT,SAAS,CAACkB,KAAK,CAAC,CAAC,EAAEF,KAAK,GAAG,CAAC,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC,EAAE;MACxD,MAAMC,WAAW,GAAGf,kBAAkB,CAACU,KAAK,CAAC,IAAIA,KAAK;MAEtD,OAAOE,MAAM,gBACXrB,OAAA;QAAeU,SAAS,EAAC,UAAU;QAAAC,QAAA,GAChC,KAAK,eACNX,OAAA;UAAMU,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAEa;QAAW;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAFtCJ,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGP,CAAC,gBAEPjB,OAAA;QAAeU,SAAS,EAAC,UAAU;QAAAC,QAAA,GAChC,KAAK,eACNX,OAAA,CAACH,IAAI;UAACgB,EAAE,EAAEA,EAAG;UAACH,SAAS,EAAC,wBAAwB;UAAAC,QAAA,EAAEa;QAAW;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAF5DJ,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGP,CACP;IACH,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACf,EAAA,CAvCID,WAAW;EAAA,QACEH,WAAW;AAAA;AAAA2B,EAAA,GADxBxB,WAAW;AAyCjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
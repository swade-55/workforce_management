{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Projects/inv_management/client/src/components/ToolCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteTool, updateTool } from '../slices/toolSlice';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToolCard = ({\n  tool,\n  handleDelete\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const [editMode, setEditMode] = useState(false);\n  const metricNameToId = {\n    PalletsPerHour: 1,\n    Uptime: 2,\n    Attendance: 3,\n    CasesPerHour: 4\n  };\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Name is required')\n  });\n  const formik = useFormik({\n    initialValues: {\n      name: tool.name || '',\n      metrics: Object.entries(tool.metrics || {}).map(([key, value]) => ({\n        id: metricNameToId[key] || key,\n        value: value\n      }))\n    },\n    validationSchema,\n    onSubmit: values => {\n      const updatedData = {\n        toolId: tool.id,\n        name: values.name,\n        metrics: values.metrics.map(metric => ({\n          metric_id: metric.id,\n          value: metric.value\n        }))\n      };\n      console.log('Dispatching updateTool with data:', updatedData);\n      dispatch(updateTool(updatedData)).unwrap().then(() => {\n        setEditMode(false); // Turn off edit mode on successful update\n      }).catch(error => {\n        console.error('Error updating tool:', error);\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card bg-base-100 shadow-xl\",\n    children: editMode ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label-text\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input input-bordered\",\n          ...formik.getFieldProps('name')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), formik.errors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: formik.errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), formik.values.metrics.map((metric, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `metrics.${index}.value`,\n          children: metric.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          ...formik.getFieldProps(`metrics.${index}.value`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)]\n      }, metric.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-actions justify-end\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleDelete(tool.id),\n          className: \"btn btn-error\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setEditMode(false),\n          className: \"btn btn-secondary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // View mode displaying tool information\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: tool.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"ui sub header\",\n          children: \"Metrics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui small feed\",\n          children: Object.entries(tool.metrics || {}).map(([key, value], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary\",\n                children: [key, \": \", value]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditMode(true),\n          className: \"ui button\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(ToolCard, \"KPCgVZUTwzZ5k41679hz66F1DQU=\", false, function () {\n  return [useDispatch, useFormik];\n});\n_c = ToolCard;\nexport default ToolCard;\nvar _c;\n$RefreshReg$(_c, \"ToolCard\");","map":{"version":3,"names":["React","useState","useDispatch","deleteTool","updateTool","useFormik","Yup","jsxDEV","_jsxDEV","Fragment","_Fragment","ToolCard","tool","handleDelete","_s","dispatch","editMode","setEditMode","metricNameToId","PalletsPerHour","Uptime","Attendance","CasesPerHour","validationSchema","object","name","string","required","formik","initialValues","metrics","Object","entries","map","key","value","id","onSubmit","values","updatedData","toolId","metric","metric_id","console","log","unwrap","then","catch","error","className","children","handleSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","getFieldProps","errors","index","htmlFor","onClick","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Projects/inv_management/client/src/components/ToolCard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteTool, updateTool } from '../slices/toolSlice';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nconst ToolCard = ({ tool, handleDelete }) => {\n  const dispatch = useDispatch();\n  const [editMode, setEditMode] = useState(false);\n\n  const metricNameToId = {\n    PalletsPerHour: 1,\n    Uptime: 2,\n    Attendance: 3,\n    CasesPerHour: 4,\n  };\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Name is required'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      name: tool.name || '',\n      metrics: Object.entries(tool.metrics || {}).map(([key, value]) => ({\n        id: metricNameToId[key] || key,\n        value: value,\n      })),\n    },\n    validationSchema,\n    onSubmit: (values) => {\n      const updatedData = {\n        toolId: tool.id,\n        name: values.name,\n        metrics: values.metrics.map(metric => ({\n          metric_id: metric.id,\n          value: metric.value,\n        })),\n      };\n      console.log('Dispatching updateTool with data:', updatedData);\n      dispatch(updateTool(updatedData))\n        .unwrap()\n        .then(() => {\n          setEditMode(false); // Turn off edit mode on successful update\n        })\n        .catch(error => {\n          console.error('Error updating tool:', error);\n        });\n    },\n  });\n\n  return (\n    <div className=\"card bg-base-100 shadow-xl\">\n      {editMode ? (\n        <form onSubmit={formik.handleSubmit} className=\"card-body\">\n          <div className=\"form-control\">\n            <label className=\"label\">\n              <span className=\"label-text\">Name</span>\n            </label>\n            <input\n              type=\"text\"\n              className=\"input input-bordered\"\n              {...formik.getFieldProps('name')}\n            />\n            {formik.errors.name && <div>{formik.errors.name}</div>}\n          </div>\n          {/* Metrics Editing Fields */}\n          {formik.values.metrics.map((metric, index) => (\n            <div key={metric.id} className=\"field\">\n              <label htmlFor={`metrics.${index}.value`}>{metric.id}</label>\n              <input\n                type=\"number\"\n                {...formik.getFieldProps(`metrics.${index}.value`)}\n              />\n            </div>\n          ))}\n          <div className=\"card-actions justify-end\">\n            <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n            <button type=\"button\" onClick={() => handleDelete(tool.id)} className=\"btn btn-error\">Delete</button>\n            <button type=\"button\" onClick={() => setEditMode(false)} className=\"btn btn-secondary\">Cancel</button>\n          </div>\n        </form>\n      ) : (\n        // View mode displaying tool information\n        <>\n          <div className=\"header\">{tool.name}</div>\n          <div className=\"description\">\n            <h4 className=\"ui sub header\">Metrics</h4>\n            <div className=\"ui small feed\">\n              {Object.entries(tool.metrics || {}).map(([key, value], index) => (\n                <div key={index} className=\"event\">\n                  <div className=\"content\">\n                    <div className=\"summary\">\n                      {key}: {value}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div>\n            <button onClick={() => setEditMode(true)} className=\"ui button\">Edit</button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ToolCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}